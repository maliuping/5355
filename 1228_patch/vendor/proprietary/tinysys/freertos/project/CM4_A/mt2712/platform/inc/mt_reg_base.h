/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly
 * prohibited.
 */
/* MediaTek Inc. (C) 2015. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY
 * ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL
 * PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR
 * ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A
 * PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER
 * WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 */

#ifndef __MT_REG_BASE_H__
#define __MT_REG_BASE_H__
#include <bit_op.h>

#define SCP_OFFSET_AP          	0x30000000
#define SCP_MODULE_BASE         0x40002000

/*
 * scp share register with ap ns
 */
#define SCP_SHARE_NS_BASE	(SCP_MODULE_BASE + 0x200)

#ifdef CFG_MTK_DRAM_4GB_SUPPORT
#define SCP_SHARE_MEM_OFFSET	(0x40000000UL + SCP_OFFSET_AP)
#else
#define SCP_SHARE_MEM_OFFSET	SCP_OFFSET_AP
#endif

#define SCP_SIZE_1M		0x100000
#define SCP_SIZE_2M		(2 * SCP_SIZE_1M)
#define SCP_SIZE_4M		(4 * SCP_SIZE_1M)
#define SCP_SIZE_8M		(8 * SCP_SIZE_1M)
#define SCP_SIZE_80M		(80 * SCP_SIZE_1M)

/*
 * DRAM space for cmsys
 */
#define SCP_DRAM_BASE		(0x4d000000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_DRAM_SIZE		(128 * SCP_SIZE_1M)

#define SCP_LOGO_IMG_BASE	(0x4d000000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_LOGO_IMG_SIZE	SCP_SIZE_8M
#define SCP_GUIDELINE_IMG_BASE	(0x4d800000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_GUIDELINE_IMG_SIZE	SCP_SIZE_8M
#define SCP_WARNING_IMG_BASE	(0x4e000000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_WARNING_IMG_SIZE	SCP_SIZE_8M
#define SCP_CONFIG_IMG_BASE	(0x4e800000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_CONFIG_IMG_SIZE	SCP_SIZE_1M

#define SCP_OS_HEAP_BASE	(0x4e900000UL + SCP_SHARE_MEM_OFFSET)
#define SCP_OS_HEAP_SIZE	SCP_SIZE_2M
#define SCP_IPC_SHARE_BASE	(SCP_OS_HEAP_BASE + SCP_OS_HEAP_SIZE)
#define SCP_IPC_SHARE_SIZE	SCP_SIZE_2M
#define SCP_DRIVER_DATA_BASE	(SCP_IPC_SHARE_BASE + SCP_IPC_SHARE_SIZE)
#define SCP_DRIVER_DATA_SIZE	SCP_SIZE_2M
#define SCP_NON_CACHED_BASE	(SCP_DRIVER_DATA_BASE + SCP_DRIVER_DATA_SIZE)
#define SCP_NON_CACHED_SIZE	SCP_SIZE_80M
#define SCP_RESRVE_MEM_BASE	(SCP_NON_CACHED_BASE + SCP_NON_CACHED_SIZE)
#define SCP_RESRVE_MEM_SIZE	(SCP_DRAM_BASE + SCP_DRAM_SIZE - SCP_RESRVE_MEM_BASE)

#define UART0_BASE              (0x11002000 + SCP_OFFSET_AP)
#define UART1_BASE              (0x11003000 + SCP_OFFSET_AP)
#define UART2_BASE              (0x11004000 + SCP_OFFSET_AP)
#define UART3_BASE              (0x11005000 + SCP_OFFSET_AP)
#define UART4_BASE              (0x11019000 + SCP_OFFSET_AP)
#define UART5_BASE              (0x1100F000 + SCP_OFFSET_AP)

#define SYSTMR_BASE		(0x1000C000 + SCP_OFFSET_AP)
#define SYSTMR_CNTCV_L		(SYSTMR_BASE + 0x008)
#define SYSTMR_CNTCV_H		(SYSTMR_BASE + 0x00c)

#define GPIO_BASE               (0x10005000 + SCP_OFFSET_AP)

#define MTK_I2C0_BASE (0x11007000 + SCP_OFFSET_AP)
#define MTK_I2C1_BASE (0x11008000 + SCP_OFFSET_AP)
#define MTK_I2C2_BASE (0x11009000 + SCP_OFFSET_AP)
#define MTK_I2C3_BASE (0x11010000 + SCP_OFFSET_AP)
#define MTK_I2C4_BASE (0x11011000 + SCP_OFFSET_AP)
#define MTK_I2C5_BASE (0x11013000 + SCP_OFFSET_AP)

#define TOPCK_BASE           (0x10000000 + SCP_OFFSET_AP)
#define DPI0_BASE              (0x1401d000 + SCP_OFFSET_AP)
#define DPI1_BASE              (0x14024000 + SCP_OFFSET_AP)
#define LVDS0_BASE           (0x14026000 + SCP_OFFSET_AP)
#define LVDS1_BASE           (0x1402e000 + SCP_OFFSET_AP)
#define LVDSOTX0_BASE           (0x10215800 + SCP_OFFSET_AP)
#define LVDSETX0_BASE           (0x10216800 + SCP_OFFSET_AP)
#define LVDSOTX1_BASE           (0x10214800 + SCP_OFFSET_AP)
#define LVDSETX1_BASE           (0x1020b800 + SCP_OFFSET_AP)
#define LVDSPLL0_BASE              (0x10209370 + SCP_OFFSET_AP)
#define LVDSPLL1_BASE              (0x10209390 + SCP_OFFSET_AP)
#define GCE_BASE		(0x10212000 + SCP_OFFSET_AP)

#define CM4_CVBS_BASE            (0x10209000 + SCP_OFFSET_AP)
#define CM4_DISPSYS_CONFIG_BASE  (0x15010000 + SCP_OFFSET_AP)
#define CM4_TVD_BASE             (0x15015000 + SCP_OFFSET_AP)
#define CM4_WCH_VDI_BASE         (0x15017000 + SCP_OFFSET_AP)
#define CM4_DRAM2AXI_BRIDGE_BASE (0x1501a000 + SCP_OFFSET_AP)

#define CM4_MMSYS_CONFIG_REGS_BASE  	(0x14000000 + SCP_OFFSET_AP)
#define CM4_DISP_OVL0_REG_BASE			(0x1400c000 + SCP_OFFSET_AP)
#define CM4_DISP_OVL2_REG_BASE (0x1402c000 + SCP_OFFSET_AP)
#define CM4_DISP_WDMA2_REG_BASE (0x1402d000 + SCP_OFFSET_AP)
#define CM4_DISP_COLOR2_REG_BASE (0x14029000 + SCP_OFFSET_AP)
#define CM4_DISP_GAMMA_REG_BASE (0x14016000 + SCP_OFFSET_AP)
#define CM4_DISP_MUTEX_BASE 			(0x14020000 + SCP_OFFSET_AP)


/* scp semaphore definition
 * need to sync with AP side
 */
enum SEMAPHORE_FLAG {
    SEMAPHORE_CLK_CFG_5 = 0,
    SEMAPHORE_PTP,
    SEMAPHORE_I2C0,
    SEMAPHORE_I2C1,
    SEMAPHORE_TOUCH,
    SEMAPHORE_APDMA,
    SEMAPHORE_SENSOR,
    NR_FLAG = 8,
};

#endif
